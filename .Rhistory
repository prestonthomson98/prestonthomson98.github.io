knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(stringr)
library(pracma)
library("RSQLite")
library(dplyr)
Hospitalizations <-read_csv("Hospitalization_all_locs.csv") %>%
filter(location_name %in% c("Germany", "United Kingdom", "France", "Italy", "Spain", "Netherlands", "Switzerland", "Sweden", "Poland","Belgium")) %>%
filter(date < as.Date("2020-05-05")) %>%
filter(allbed_mean > 0)
head(Hospitalizations)
popsize <- function(loc){
if (loc == "Germany"){
82576900
} else if (loc == "France"){
67187000
} else if (loc == "United Kingdom"){
65648100
} else if (loc == "Italy"){
60391000
} else if (loc == "Spain"){
46549045
} else if (loc == "Poland"){
38426000
} else if (loc == "Netherlands"){
17261622
} else if (loc == "Sweden"){
10142686
} else if (loc == "Belgium"){
11399335
} else{
8648907
}
}
Hospitalizations$DailyDeathsPerHundredThousand <- Hospitalizations$deaths_mean/popsize(Hospitalizations$location_name) * 100000
Hospitalizations %>% ggplot(aes(x=Hospitalizations$date,y=Hospitalizations$DailyDeathsPerHundredThousand,color = location_name)) + geom_point() + geom_line()
Summary <- read_csv("Summary_stats_all_locs.csv") %>%
filter(location_name %in% c("Germany", "United Kingdom", "France", "Italy", "Spain", "Netherlands", "Switzerland", "Sweden", "Poland","Belgium"))
Summary
location_lm <- lm(DailyDeathsPerHundredThousand~location_name, data=Hospitalizations)
location_lm %>% tidy() %>% knitr::kable()
library(tidyverse)
location_lm <- lm(DailyDeathsPerHundredThousand~location_name, data=Hospitalizations)
location_lm %>% tidy() %>% knitr::kable()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(stringr)
library(pracma)
library("RSQLite")
library(dplyr)
Hospitalizations <-read_csv("Hospitalization_all_locs.csv") %>%
filter(location_name %in% c("Germany", "United Kingdom", "France", "Italy", "Spain", "Netherlands", "Switzerland", "Sweden", "Poland","Belgium")) %>%
filter(date < as.Date("2020-05-05")) %>%
filter(allbed_mean > 0)
head(Hospitalizations)
popsize <- function(loc){
if (loc == "Germany"){
82576900
} else if (loc == "France"){
67187000
} else if (loc == "United Kingdom"){
65648100
} else if (loc == "Italy"){
60391000
} else if (loc == "Spain"){
46549045
} else if (loc == "Poland"){
38426000
} else if (loc == "Netherlands"){
17261622
} else if (loc == "Sweden"){
10142686
} else if (loc == "Belgium"){
11399335
} else{
8648907
}
}
Hospitalizations$DailyDeathsPerHundredThousand <- Hospitalizations$deaths_mean/popsize(Hospitalizations$location_name) * 100000
Hospitalizations %>% ggplot(aes(x=Hospitalizations$date,y=Hospitalizations$DailyDeathsPerHundredThousand,color = location_name)) + geom_point() + geom_line()
Summary <- read_csv("Summary_stats_all_locs.csv") %>%
filter(location_name %in% c("Germany", "United Kingdom", "France", "Italy", "Spain", "Netherlands", "Switzerland", "Sweden", "Poland","Belgium"))
Summary
library(tidyverse)
location_lm <- lm(DailyDeathsPerHundredThousand~location_name, data=Hospitalizations)
location_lm %>% tidy() %>% knitr::kable()
library(tidyverse)
location_lm <- lm(DailyDeathsPerHundredThousand~location_name, data=Hospitalizations)
location_lm %>% knitr::kable()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(stringr)
library(pracma)
library("RSQLite")
library(dplyr)
library(broom)
Hospitalizations <-read_csv("Hospitalization_all_locs.csv") %>%
filter(location_name %in% c("Germany", "United Kingdom", "France", "Italy", "Spain", "Netherlands", "Switzerland", "Sweden", "Poland","Belgium")) %>%
filter(date < as.Date("2020-05-05")) %>%
filter(allbed_mean > 0)
head(Hospitalizations)
popsize <- function(loc){
if (loc == "Germany"){
82576900
} else if (loc == "France"){
67187000
} else if (loc == "United Kingdom"){
65648100
} else if (loc == "Italy"){
60391000
} else if (loc == "Spain"){
46549045
} else if (loc == "Poland"){
38426000
} else if (loc == "Netherlands"){
17261622
} else if (loc == "Sweden"){
10142686
} else if (loc == "Belgium"){
11399335
} else{
8648907
}
}
Hospitalizations$DailyDeathsPerHundredThousand <- Hospitalizations$deaths_mean/popsize(Hospitalizations$location_name) * 100000
Hospitalizations %>% ggplot(aes(x=Hospitalizations$date,y=Hospitalizations$DailyDeathsPerHundredThousand,color = location_name)) + geom_point() + geom_line()
Summary <- read_csv("Summary_stats_all_locs.csv") %>%
filter(location_name %in% c("Germany", "United Kingdom", "France", "Italy", "Spain", "Netherlands", "Switzerland", "Sweden", "Poland","Belgium"))
Summary
library(tidyverse)
location_lm <- lm(DailyDeathsPerHundredThousand~location_name, data=Hospitalizations)
location_lm %>% tidy() %>% knitr::kable()
#we would like to retain the hospitalization data for the dates 5/4 as our independent variable, and 3/29 as our dependent variable.
df = inner_join(Hospitalizations,Summary, by='location_name')%>%
filter(date == as.Date("2020-05-04") | date == as.Date("2020-03-29"))
keeps <- c("location_name", "peak_bed_day_mean", "peak_icu_bed_day_mean", "peak_vent_day_mean", "all_bed_capacity", "all_bed_usage", "stay_home_start_date", "any_gathering_restrict_start_date", "all_non-ess_business_start_date","DailyDeathsPerHundredThousand", "date")
# keeping relevant columns and adding a conditional column for if the country instituted a stay at home order
df = df[keeps]
df$stay_home_binary <- ifelse(is.na(df$stay_home_start_date), 0, 1)
df$restrict_gathering_binary <- ifelse(is.na(df$any_gathering_restrict_start_date), 0, 1)
df$non_ess_restriction_binary <- ifelse(is.na(df$'all_non-ess_business_start_date'), 0, 1)
df$bed_usage_percentage <- df$all_bed_usage / df$all_bed_capacity
# we then need to make the each date a column with each row's value for the column being the specific deaths per 100,000 per country. Tidying up the data so it is in the correct format for regression.
df$may4 <- ifelse(df$date == as.Date("2020-05-04"), df$DailyDeathsPerHundredThousand, NA)
df$march29 <- ifelse(df$date == as.Date("2020-03-29"), df$DailyDeathsPerHundredThousand, NA)
dfmay4 = df[!is.na(df$may4), ]
dfmay4 = dfmay4[c("location_name", "may4")]
dfmarch29 = df[!is.na(df$march29), ]
dfmarch29 = dfmarch29[c("location_name", "march29")]
keeps <- c("location_name", "peak_bed_day_mean", "peak_icu_bed_day_mean", "peak_vent_day_mean", "bed_usage_percentage", "stay_home_binary", "non_ess_restriction_binary", "restrict_gathering_binary")
df = df[keeps]
df = df[!duplicated(df$location_name), ]
temp <- inner_join(dfmarch29, dfmay4, by="location_name")
df <- inner_join(df, temp, by='location_name')
df
#After all that work cleaning up the data now we have our final dataframe to work with for the linear regression.
library(broom)
auto_fit <- lm(may4~bed_usage_percentage+stay_home_binary+restrict_gathering_binary+non_ess_restriction_binary+march29, data=df)
auto_fit
auto_fit_stats <- auto_fit %>%
tidy()
auto_fit_stats %>% knitr::kable()
auto_fit %>% ggplot(aes(x=factor(df$location_name), y=.resid)) + geom_boxplot() + labs(title="Residuals vs Country", x="Country", y="Residual")
auto_fit %>%
augment() %>%
ggplot(aes(x=.fitted,y=.resid)) + geom_point() + labs(title="Fitted vs. R^2",
x = "fitted",
y = "R^2")
